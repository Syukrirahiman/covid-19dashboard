[{"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/index.js":"1","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/reportWebVitals.js":"2","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/App.js":"3","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/view/StatisticView/StatisticView.js":"4","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/components/Statistic/Statistic.js":"5","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/theme/index.js":"6","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/view/Navbar/index.js":"7","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/theme/palette.js":"8","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/theme/overrides.js":"9","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/theme/typography.js":"10","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/view/Navbar/Navbar.js":"11"},{"size":509,"mtime":1607088428272,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1607087658881,"results":"14","hashOfConfig":"13"},{"size":1151,"mtime":1607347731234,"results":"15","hashOfConfig":"13"},{"size":648,"mtime":1607347731238,"results":"16","hashOfConfig":"13"},{"size":5679,"mtime":1607369923170,"results":"17","hashOfConfig":"13"},{"size":337,"mtime":1607347731235,"results":"18","hashOfConfig":"13"},{"size":33,"mtime":1607347731238,"results":"19","hashOfConfig":"13"},{"size":379,"mtime":1607347731236,"results":"20","hashOfConfig":"13"},{"size":131,"mtime":1607347731236,"results":"21","hashOfConfig":"13"},{"size":205,"mtime":1607347731237,"results":"22","hashOfConfig":"13"},{"size":2379,"mtime":1607347731237,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"13ipn3l",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"26"},"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/index.js",[],["48","49"],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/reportWebVitals.js",[],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/App.js",[],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/view/StatisticView/StatisticView.js",[],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/components/Statistic/Statistic.js",["50"],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/theme/index.js",[],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/view/Navbar/index.js",[],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/theme/palette.js",[],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/theme/overrides.js",[],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/theme/typography.js",[],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/view/Navbar/Navbar.js",["51"],"\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { withRouter, useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst tabs = [{name: 'Statistic', pathname: '/statistic'}, {name: 'Countries', pathname: '/countries'}, {name: 'History', pathname: '/history'},]\n\nfunction Navbar() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    // const history = useHistory();\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    // const handleRedirect = (pathName) => {\n    //     history.push(pathName)\n    // }\n\n\n    return (\n        <React.Fragment>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton> */}\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Covid-19 Dashboard\n                </Typography>\n                    <Button color=\"inherit\">Logout</Button>\n                </Toolbar>\n            </AppBar>\n\n            <div>\n                <AppBar position=\"static\">\n                    <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                        {tabs.map((currTab, index) => (\n                            <Tab component = {Link} label={currTab.name} {...a11yProps(index)} to ={currTab.pathname}/>\n                        ))}\n                    </Tabs>\n                </AppBar>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default withRouter(Navbar);",{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":4,"column":50,"nodeType":"58","messageId":"59","endLine":4,"endColumn":55},{"ruleId":"56","severity":1,"message":"60","line":12,"column":22,"nodeType":"58","messageId":"59","endLine":12,"endColumn":32},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","no-global-assign","no-unsafe-negation"]