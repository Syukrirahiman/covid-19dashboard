[{"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/index.js":"1","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/reportWebVitals.js":"2","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/App.js":"3","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/view/StatisticView/StatisticView.js":"4","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/components/Statistic/Statistic.js":"5","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/theme/index.js":"6","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/view/Navbar/index.js":"7","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/theme/palette.js":"8","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/theme/overrides.js":"9","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/theme/typography.js":"10","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/view/Navbar/Navbar.js":"11","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/view/LoginView/index.js":"12","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/view/StatisticView/index.js":"13","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/view/LoginView/LoginView.js":"14"},{"size":509,"mtime":1607088428272,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1607087658881,"results":"17","hashOfConfig":"16"},{"size":2961,"mtime":1607414197178,"results":"18","hashOfConfig":"16"},{"size":648,"mtime":1607347731238,"results":"19","hashOfConfig":"16"},{"size":5679,"mtime":1607369923170,"results":"20","hashOfConfig":"16"},{"size":337,"mtime":1607347731235,"results":"21","hashOfConfig":"16"},{"size":33,"mtime":1607347731238,"results":"22","hashOfConfig":"16"},{"size":379,"mtime":1607347731236,"results":"23","hashOfConfig":"16"},{"size":131,"mtime":1607347731236,"results":"24","hashOfConfig":"16"},{"size":205,"mtime":1607347731237,"results":"25","hashOfConfig":"16"},{"size":2379,"mtime":1607347731237,"results":"26","hashOfConfig":"16"},{"size":36,"mtime":1607409614547,"results":"27","hashOfConfig":"16"},{"size":40,"mtime":1607347731239,"results":"28","hashOfConfig":"16"},{"size":8462,"mtime":1607414148446,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"13ipn3l",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/index.js",[],["62","63"],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/reportWebVitals.js",[],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/App.js",["64"],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/view/StatisticView/StatisticView.js",[],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/components/Statistic/Statistic.js",["65"],"import React, { Component } from 'react'\nimport axios from \"axios\";\n\nimport { Grid, withStyles, InputLabel, MenuItem, Paper, FormControl, Select, Typography } from '@material-ui/core';\n\n\nclass Statistic extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            selectedData: null,\n        }\n    }\n\n    componentDidMount() {\n        this._fetchStatisticData();\n    }\n\n    onSorting = (data) => {\n        let sortedList = data.sort((a, b) => {\n        return (a['country'] <= b['country'] ? -1 : 1)\n        });\n\n        return sortedList\n    }\n\n    _fetchStatisticData = () => {\n        const options = {\n            method: 'GET',\n            url: 'https://covid-193.p.rapidapi.com/statistics',\n            headers: {\n                'x-rapidapi-key': '20abfa9073msh424d1f742c0f240p1de7c6jsn6d5bd2fe379c',\n                'x-rapidapi-host': 'covid-193.p.rapidapi.com'\n            }\n        };\n        axios.request(options)\n            .then((response) => {\n                this.setState({\n                    data: this.onSorting(response.data.response)\n                })\n            }).catch(function (error) {\n                console.error(error);\n            });\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            selectedData: event.target.value\n        })\n    }\n\n    render() {\n        const { classes } = this.props;\n        console.log(this.state.selectedData)\n        return (\n            <React.Fragment>\n                <div>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel id=\"demo-simple-select-label\">Country</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={this.state.selectedData}\n                            onChange={this.handleChange}\n                        >\n                            <MenuItem value={null}><em>Select Country</em></MenuItem>\n                            {this.state.data.map((entity, i) =>\n                                (<MenuItem key={i} value={entity}>{entity.country}</MenuItem>\n                                ))}\n                        </Select>\n                    </FormControl>\n                </div>\n\n                <div className={classes.body}>\n                    {this.state.selectedData === null ?\n                        <Typography align=\"center\">\n                            Please select a country to view statistic\n                    </Typography>\n                        :\n\n                        <Grid container spacing={2}>\n\n                            <Grid item xs={12} sm={12}>\n                                <Typography align=\"center\" variant=\"h4\">\n                                    <p> {this.state.selectedData.country}</p>\n                                </Typography>\n                                <p align=\"center\"> As of {this.state.selectedData.day}</p>\n                            </Grid>\n\n                            <Grid item xs={12} sm={3}>\n                                <Typography align=\"center\" variant=\"h5\">\n                                    Active Cases\n                        </Typography>\n                                <Typography align=\"center\" variant=\"h6\" >\n                                    <p> {this.state.selectedData.cases.active} ({this.state.selectedData.cases.new} new cases)</p>\n                                </Typography>\n                            </Grid>\n\n                            <Grid item xs={12} sm={3}>\n                                <Typography align=\"center\" variant=\"h5\">\n                                    Critical\n                                </Typography>\n                                <Typography align=\"center\" variant=\"h6\" className={classes.mainColor}>\n                                    <p className={classes.critical}> {this.state.selectedData.cases.critical === null ? 0 : this.state.selectedData.cases.critical}</p>\n                                </Typography>\n                            </Grid>\n                            \n                            <Grid item xs={12} sm={3}>\n                                <Typography align=\"center\" variant=\"h5\">\n                                    Recovered\n                                </Typography>\n                                <Typography align=\"center\" variant=\"h6\" className={classes.mainColor}>\n                                    <p> {this.state.selectedData.cases.recovered === null ? 0 : this.state.selectedData.cases.recovered}</p>\n                                </Typography>\n                            </Grid>\n\n                            <Grid item xs={12} sm={3}>\n                                <Typography align=\"center\" variant=\"h5\">\n                                    Total Deaths\n                                </Typography>\n                                <Typography align=\"center\" variant=\"h6\" className={classes.mainColor}>\n                                    <p className={classes.critical}> {this.state.selectedData.deaths.total === null ? 0 : this.state.selectedData.cases.critical}</p>\n                                </Typography>\n                            </Grid>\n                        </Grid>\n                    }\n                </div>\n            </React.Fragment >\n        )\n    }\n}\n\nconst styles = (theme) => ({\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n    },\n    body: {\n        margin: theme.spacing(1),\n    },\n    critical: {\n        color: \"#f70008\"\n    }\n});\n\nexport default withStyles(styles)(Statistic);","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/theme/index.js",[],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/view/Navbar/index.js",[],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/theme/palette.js",[],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/theme/overrides.js",[],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/theme/typography.js",[],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/view/Navbar/Navbar.js",["66"],"\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n// import IconButton from '@material-ui/core/IconButton';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport { withRouter, useHistory } from \"react-router\";\nimport { Link } from \"react-router-dom\";\n\n\nfunction a11yProps(index) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme) => ({\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst tabs = [{name: 'Statistic', pathname: '/statistic'}, {name: 'Countries', pathname: '/countries'}, {name: 'History', pathname: '/history'},]\n\nfunction Navbar() {\n    const classes = useStyles();\n    const [value, setValue] = React.useState(0);\n    // const history = useHistory();\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    // const handleRedirect = (pathName) => {\n    //     history.push(pathName)\n    // }\n\n\n    return (\n        <React.Fragment>\n            <AppBar position=\"static\">\n                <Toolbar>\n                    {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton> */}\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Covid-19 Dashboard\n                </Typography>\n                    <Button color=\"inherit\">Logout</Button>\n                </Toolbar>\n            </AppBar>\n\n            <div>\n                <AppBar position=\"static\">\n                    <Tabs value={value} onChange={handleChange} aria-label=\"simple tabs example\">\n                        {tabs.map((currTab, index) => (\n                            <Tab component = {Link} label={currTab.name} {...a11yProps(index)} to ={currTab.pathname}/>\n                        ))}\n                    </Tabs>\n                </AppBar>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default withRouter(Navbar);","/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/view/LoginView/index.js",[],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/view/StatisticView/index.js",[],"/Users/syukrirahiman/Documents/GitHub/covid-19dashboard/covid-19dashboard/src/view/LoginView/LoginView.js",["67"],"import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Alert from '@material-ui/lab/Alert';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n    error: {\n        padding: '10px',\n        width: '100%',\n        marginTop: theme.spacing(1),\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n}));\n\nexport default function SignIn(props) {\n    const classes = useStyles();\n    const [userId, setUserId] = React.useState(null);\n    const [username, setUsername] = React.useState(null);\n    const [password, setPassword] = React.useState(null);\n    const [newPassword, setNewPassword] = React.useState('');\n    const [newPassword2, setNewPassword2] = React.useState('');\n    const [errorText, setErrorText] = React.useState(null);\n    const [resetPw, setResetPw] = React.useState(false);\n    const [loggingInStatus, setLoggingInStatus] = React.useState(false);\n    const [statusCode, setStatusCode] = React.useState(0);\n    const handleLoginSuccess = props.handleLoginSuccess;\n\n    const getDisabled = () => {\n        if (loggingInStatus) {\n            return { disabled: true }\n        }\n        return {}\n    }\n    const handleLogin = () => {\n        setLoggingInStatus(true)\n        setErrorText(null)\n\n        //add in login api and set bearer token in localstorage as well\n        let user1 = { username: \"john\", password: \"password123\", id: \"1111111\", changePassword: true }\n        let user2 = { username: \"mike\", password: \"password123\", id: \"2222222\", changePassword: true }\n        if (username === user1.username && password === user1.password) {\n            handleLoginSuccess(user1)\n        } else if (username === user2.username && password === user2.password) {\n            setResetPw(true);\n            setUserId(user2.id);\n            setErrorText(\"Please change your password before logging in.\");\n            setLoggingInStatus(false)\n        } else {\n            setStatusCode(1)\n            setErrorText(\"wrong password\")\n            setLoggingInStatus(false)\n        }\n\n    }\n\n    const handleChangePassword = () => {\n        const passRegex = new RegExp('^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[@$!%*?&])([a-zA-Z0-9@$!%*?&]{12,})$')\n        setErrorText(null)\n        setLoggingInStatus(true)\n        if (newPassword === '' || newPassword === null) {\n            setErrorText(\"Please fill in your new password.\")\n            setStatusCode(1)\n            setLoggingInStatus(false)\n        } else if (newPassword !== newPassword2) {\n            setErrorText(\"Passwords don't match. Please retype your passwords.\")\n            setStatusCode(1)\n            setLoggingInStatus(false)\n        } else if (!passRegex.test(newPassword)) {\n            setErrorText(\"Password must contain at least 1 upper case, 1 lower case, 1 number, 1 special character and must be more than 8 characters\")\n            setStatusCode(1)\n            setLoggingInStatus(false)\n        } else {\n            let user2 = { username: \"mike\", password: \"password123\", id: \"2222222\", changePassword: false }\n            handleLoginSuccess(user2)\n        }\n    }\n\n    const keyPressLogin = (e) => {\n        if (e.keyCode === 13) {\n            handleLogin();\n        }\n    }\n\n    const keyPressResetPw = (e) => {\n        if (e.keyCode === 13) {\n            handleChangePassword();\n        }\n    }\n\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                {/* `<img src={require('assets/image/logo/LoveCareSG.png')} alt='logo' style={{ height: \"188px\" }} />` */}\n                {!resetPw ? <div className=\"login\">\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        {...getDisabled()}\n                        id=\"username\"\n                        label=\"Username\"\n                        name=\"username\"\n                        autoComplete=\"username\"\n                        autoFocus\n                        onChange={(event) => { setUsername(event.target.value) }}\n                        onKeyDown={keyPressLogin}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        {...getDisabled()}\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        autoComplete=\"current-password\"\n                        onChange={(event) => { setPassword(event.target.value) }}\n                        onKeyDown={keyPressLogin}\n                    />\n                    {errorText !== null ? <Alert severity={statusCode === 1 ? 'error' : 'warning'} className={classes.error}>{errorText}</Alert> : ''}\n                    <Button\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        {...getDisabled()}\n                        className={classes.submit}\n                        onClick={handleLogin}\n                        style={{ borderRadius: 25, minHeight: '48px' }}\n                    >\n                        Sign In\n          </Button>\n                </div>\n                    :\n                    <div className=\"resetPw\">\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            {...getDisabled()}\n                            name=\"newPassword\"\n                            label=\"New Password\"\n                            type=\"password\"\n                            id=\"newPassword\"\n                            autoComplete=\"current-password\"\n                            value={newPassword}\n                            onChange={(event) => { setNewPassword(event.target.value) }}\n                            onKeyDown={keyPressResetPw}\n                        />\n\n                        <TextField\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            {...getDisabled()}\n                            name=\"newPassword2\"\n                            label=\"Retype your new password\"\n                            type=\"password\"\n                            autoComplete=\"current-password\"\n                            value={newPassword2}\n                            onChange={(event) => { setNewPassword2(event.target.value) }}\n                            onKeyDown={keyPressResetPw}\n                        />\n                        {errorText !== null ? <Alert severity={statusCode === 1 ? 'error' : 'warning'} className={classes.error}>{errorText}</Alert> : ''}\n                        <Button\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            {...getDisabled()}\n                            className={classes.submit}\n                            onClick={handleChangePassword}\n                            style={{ borderRadius: 25, minHeight: '48px' }}\n                        >\n                            Change Password\n              </Button>\n                    </div>}\n\n                <Grid container>\n\n                </Grid>\n            </div>\n            <Box mt={4}>\n                {/* <FooterView /> */}\n            </Box>\n        </Container>\n    );\n}",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":82,"column":11,"nodeType":"74","messageId":"75","endLine":82,"endColumn":30},{"ruleId":"72","severity":1,"message":"76","line":4,"column":50,"nodeType":"74","messageId":"75","endLine":4,"endColumn":55},{"ruleId":"72","severity":1,"message":"77","line":12,"column":22,"nodeType":"74","messageId":"75","endLine":12,"endColumn":32},{"ruleId":"72","severity":1,"message":"78","line":41,"column":12,"nodeType":"74","messageId":"75","endLine":41,"endColumn":18},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'handleLogoutSuccess' is assigned a value but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'useHistory' is defined but never used.","'userId' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]